services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    restart: unless-stopped
    environment:
      - node.name=elasticsearch
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
    command: >
      bash -c '
        set -m
        /usr/local/bin/docker-entrypoint.sh eswrapper &
        until curl -s http://localhost:9200; do sleep 1; done;
        curl -s -X POST -u "elastic:elastic" -H "Content-Type: application/json" http://localhost:9200/_security/user/kibana_system/_password -d "{\"password\": \"elastic\"}"
        fg %1
      '
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: ${ES_MEM_LIMIT}
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - analytics
    labels:
      - "traefik.http.routers.elastic.rule=HostRegexp(`elastic\\..+`)"
      - "co.elastic.logs/module=elasticsearch"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200"]
      interval: 3s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:8.17.0
    restart: unless-stopped
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_REPORTING_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    networks:
      - analytics
    volumes:
      - kibanadata:/usr/share/kibana/data
    labels:
      - "traefik.http.routers.kibana.rule=HostRegexp(`kibana\\..+`)"
      - "co.elastic.logs/module=kibana"
    mem_limit: ${KB_MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 3s
      timeout: 10s
      retries: 120

  apm-server:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/apm/apm-server:8.17.3
    user: apm-server
    networks:
      - analytics
    volumes:
      - ./apm-config.yaml:/usr/share/apm-server/apm-server.yml:ro

volumes:
  esdata:
  kibanadata:
  logstashdata:
